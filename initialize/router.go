/*
 * @Author: jianghao
 * @Date: 2022-07-29 09:48:24
 * @LastEditors: jianghao
 * @LastEditTime: 2022-10-17 11:27:44
 */
package initialize

import (
	"server-fiber/middleware"
	"server-fiber/router"

	"github.com/gofiber/fiber/v2"
)

// 初始化总路由

func Routers() *fiber.App {
	Router := fiber.New(fiber.Config{
		CaseSensitive: true,
		BodyLimit:     10 * 1024 * 1024,
		AppName:       "sever-fiber",
	})
	appRouter := router.RouterGroupApp.App
	systemRouter := router.RouterGroupApp.System
	exampleRouter := router.RouterGroupApp.Example
	mobile := router.RouterGroupApp.Mobile
	Router.Static("/api/uploads/", "uploads/")     // 本地的frontend api文件路由转化
	Router.Static("/backend/uploads/", "uploads/") // 本地的backend文件路由转化
	Router.Static("/mobile/uploads/", "uploads/")  // 本地的mobile文件路由转化
	Router.Static("/backend/form-generator", "resource/page")
	// Router.Use(middleware.LimitHandler)
	{
		backendRooterNotLogin := Router.Group("/backend")
		systemRouter.InitBaseRouter(backendRooterNotLogin) // 注册基础功能路由 不做鉴权
		systemRouter.InitInitRouter(backendRooterNotLogin) // 自动初始化相关

		backendRooter := backendRooterNotLogin.Use(middleware.JWTAuth).Use(middleware.CasbinHandler) // casbin的拦截规则
		// backendRooter := backendRooterNotLogin
		{
			systemRouter.InitApiRouter(backendRooter)                 // 注册功能api路由
			systemRouter.InitJwtRouter(backendRooter)                 // jwt相关路由
			systemRouter.InitUserRouter(backendRooter)                // 注册用户路由
			systemRouter.InitMenuRouter(backendRooter)                // 注册menu路由
			systemRouter.InitSystemRouter(backendRooter)              // system相关路由
			systemRouter.InitCasbinRouter(backendRooter)              // 权限相关路由
			systemRouter.InitAutoCodeRouter(backendRooter)            // 创建自动化代码
			systemRouter.InitAuthorityRouter(backendRooter)           // 注册角色路由
			systemRouter.InitSysDictionaryRouter(backendRooter)       // 字典管理
			systemRouter.InitAutoCodeHistoryRouter(backendRooter)     // 自动化代码历史
			systemRouter.InitSysOperationRecordRouter(backendRooter)  // 操作记录
			systemRouter.InitSysDictionaryDetailRouter(backendRooter) // 字典详情管理
			systemRouter.InitAuthorityBtnRouterRouter(backendRooter)  // 字典详情管理
			systemRouter.InitProblemRouter(backendRooter)             // problem
			systemRouter.InitGithubRouter(backendRooter)              // github commit

			exampleRouter.InitExcelRouter(backendRooter)                 // 表格导入导出
			exampleRouter.InitCustomerRouter(backendRooter)              // 客户路由
			exampleRouter.InitFileUploadAndDownloadRouter(backendRooter) // 文件上传下载功能路由

			// Code generated by server Begin; DO NOT EDIT.

			appRouter.InitTagRouter(backendRooter)         // tab
			appRouter.InitArticleRouter(backendRooter)     //article
			appRouter.InitCommentRouter(backendRooter)     // comment
			appRouter.InitBaseMessageRouter(backendRooter) // baseMessage
			appRouter.InitTaskRouter(backendRooter)        //task 任务
			appRouter.InitUserRouter(backendRooter)        // frontend user
			mobile.InitMobileRouter(backendRooter)

			// Code generated by server End; DO NOT EDIT.
		}
		frontendRouter := router.RouterGroupApp.Frontend
		PublicGroup := Router.Group("api")
		{
			// 前台的API
			frontendRouter.InitFrontendRouter(PublicGroup)
		}
		InstallPlugin(backendRooter, PublicGroup)
	}

	return Router
}
